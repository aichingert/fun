// @generated by protobuf-ts 2.9.3 with parameter optimize_code_size
// @generated from protobuf file "channel.proto" (package "channel", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message channel.JoinRequest
 */
export interface JoinRequest {
    /**
     * @generated from protobuf field: string alias = 1;
     */
    alias: string;
}
/**
 * @generated from protobuf message channel.GameMove
 */
export interface GameMove {
    /**
     * @generated from protobuf field: bool is_cross = 1;
     */
    isCross: boolean;
    /**
     * @generated from protobuf field: int32 position = 2;
     */
    position: number;
}
/**
 * @generated from protobuf message channel.Empty
 */
export interface Empty {
}
// @generated message type with reflection information, may provide speed optimized methods
class JoinRequest$Type extends MessageType<JoinRequest> {
    constructor() {
        super("channel.JoinRequest", [
            { no: 1, name: "alias", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message channel.JoinRequest
 */
export const JoinRequest = new JoinRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GameMove$Type extends MessageType<GameMove> {
    constructor() {
        super("channel.GameMove", [
            { no: 1, name: "is_cross", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message channel.GameMove
 */
export const GameMove = new GameMove$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("channel.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message channel.Empty
 */
export const Empty = new Empty$Type();
/**
 * @generated ServiceType for protobuf service channel.Channel
 */
export const Channel = new ServiceType("channel.Channel", [
    { name: "JoinQueue", serverStreaming: true, options: {}, I: JoinRequest, O: GameMove }
]);
