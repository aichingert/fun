// @generated by protobuf-ts 2.9.3 with parameter optimize_code_size
// @generated from protobuf file "subtac.proto" (package "suptac", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message suptac.JoinRequest
 */
export interface JoinRequest {
    /**
     * @generated from protobuf field: string user = 1;
     */
    user: string;
}
/**
 * @generated from protobuf message suptac.Message
 */
export interface Message {
    /**
     * @generated from protobuf field: string content = 1;
     */
    content: string;
}
/**
 * @generated from protobuf message suptac.Empty
 */
export interface Empty {
}
// @generated message type with reflection information, may provide speed optimized methods
class JoinRequest$Type extends MessageType<JoinRequest> {
    constructor() {
        super("suptac.JoinRequest", [
            { no: 1, name: "user", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message suptac.JoinRequest
 */
export const JoinRequest = new JoinRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Message$Type extends MessageType<Message> {
    constructor() {
        super("suptac.Message", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message suptac.Message
 */
export const Message = new Message$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("suptac.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message suptac.Empty
 */
export const Empty = new Empty$Type();
/**
 * @generated ServiceType for protobuf service suptac.Lobby
 */
export const Lobby = new ServiceType("suptac.Lobby", [
    { name: "JoinLobby", serverStreaming: true, options: {}, I: JoinRequest, O: Message },
    { name: "SendMessage", options: {}, I: Message, O: Empty }
]);
